---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: devldx
spec: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-backend-rest-api
  namespace: devldx
spec:
  selector:
    matchLabels:
      app: spring-boot-backend-rest-api
  replicas: 3
  template:
    metadata:
      labels:
        app: spring-boot-backend-rest-api
    spec:
      containers:
        - image: vlad0x/my-spring-boot-demo-docker:apple-silicon
          name: my-spring-boot-demo-docker
          ports:
            - containerPort: 8080
          resources: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: spring-boot-backend-rest-api
  name: spring-boot-backend-rest-service
  namespace: devldx
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: spring-boot-backend-rest-api
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: react-front-end
  name: react-front-end
  namespace: devldx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: react-front-end
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: react-front-end
    spec:
      containers:
      - image: vlad0x/dockerized-react:apple-silicon
        name: dockerized-react
        ports:
          - containerPort: 80
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: react-front-end
  name: react-front-end-service
  namespace: devldx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: react-front-end
  type: LoadBalancer
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ehealth-app-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
# spec:
#   rules:
#   - http:
#       paths:
#         - path: /?(.*)
#           pathType: Prefix
#           backend:
#             service:
#               name: react-front-end-service
#               port: 
#                 number: 80
#         - path: /api/?(.*)
#           pathType: Prefix
#           backend:
#             service:
#               name: spring-boot-backend-rest-service
#               port: 
#                 number: 8080